name: APK Security Pipeline

on:
  push:
    branches: [ "main" ] 
  workflow_dispatch:

jobs:
  apk-security:
    runs-on: ubuntu-latest
    steps:
    # 1. Checkout repo and pull APK from Git LFS
    - name: Checkout repository (with LFS)
      uses: actions/checkout@v4
      with:
        lfs: true

    # 2. Setup Python (required for MobSF, Gitleaks, OSV)
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    # 3. Install system dependencies
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip default-jdk android-tools-adb openvpn wget curl

    # 4. Install Python and binary security tools
    - name: Install MobSFScan and Gitleaks
      run: |
        # Install MobSFScan (Python)
        pip install mobsfscan

        # Install Gitleaks (binary)
        wget https://github.com/zricethezav/gitleaks/releases/download/v8.19.1/gitleaks_8.19.1_linux_x64.tar.gz -O gitleaks.tar.gz
        tar -xvzf gitleaks.tar.gz
        sudo mv gitleaks /usr/local/bin/
        gitleaks version

    - name: Install OSV Scanner via Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build OSV Scanner
      run: |
        # Ensure Go bin is in PATH
        export PATH=$PATH:$(go env GOPATH)/bin

        # Install OSV Scanner
        go install github.com/google/osv-scanner/cmd/osv-scanner@latest

        # Verify installation
        osv-scanner --version

    # Install Drozer
    - name: Install Drozer
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-11-jdk python3-pip
        pip install drozer
        
    # 5. Connect to VPN
    - name: Install openfortivpn
      run: |
        sudo apt-get update
        sudo apt-get install -y openfortivpn
    - name: Connect to Fortinet VPN
      env:
        VPN_USERNAME: ${{ secrets.VPN_USERNAME }}
        VPN_PASSWORD: ${{ secrets.VPN_PASSWORD }}
      run: |
        # Run VPN in background
        sudo openfortivpn znkfw.newroztelecom.com:10443 \
          --username "$VPN_USERNAME" \
          --password "$VPN_PASSWORD" \
          --trusted-cert "" &   # optional: provide cert fingerprint if required
        VPN_PID=$!
        echo "[+] VPN started with PID $VPN_PID"
        sleep 15
        # Test internal connectivity
        curl -I https://internal-api.company.local || true


    # 6. Static Analysis (MobSF)
    - name: Run MobSFScan (Static Analysis)
      run: |
        mobsfscan app_decompiled/AndroidManifest.xml --json > reports/mobsfscan.json || true

    # 7. Secrets Scan (Gitleaks)
    - name: Run Gitleaks (Secrets Scan)
      run: |
        gitleaks detect --source app_decompiled --report-path reports/gitleaks.json || true

    # 8. Dependency / SCA Scan (OSV Scanner)
    - name: Run OSV Scanner (Dependency Analysis)
      run: |
        osv-scanner --sbom=app_decompiled/sbom.json --format=json > reports/osv.json || true

    # 9. Dynamic Analysis with Android Emulator
    - name: Launch Android Emulator & Run Dynamic Scan
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 35
        target: default
        arch: x86_64
        profile: Nexus 6
        script: |
          chmod +x ./scripts/dynamic_scan.sh
          ./scripts/dynamic_scan.sh


    # 10. Upload all reports as artifacts
    - name: Upload Security Reports
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: reports/**
    - name: Stop VPN
      run: |
        sudo pkill openfortivpn || true
        echo "[+] VPN stopped"
